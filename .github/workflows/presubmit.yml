name: Presubmit Checks

on:
  pull_request:
    branches: [ main ]

  schedule:
    - cron: '0 2 * * 0'  # Weekly

jobs:
  sanitizers:
    runs-on: ubuntu-latest

    permissions:
      packages: read

    container:
      image: ghcr.io/charlesnicholson/docker-image:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v3
      - name: Build
        run: COBS_SANITIZE=1 make -j

  arm-cm4:
    runs-on: ubuntu-latest

    permissions:
      packages: read

    container:
      image: ghcr.io/charlesnicholson/docker-image:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v3
      - name: Build
        run: CC=clang CXX=clang++ arm-none-eabi-gcc -mcpu=cortex-m4 -Os -Werror -Wall -Wextra -Wconversion -c cobs.c

  linux:
    name: linux (${{ matrix.compiler.name }}, ${{ matrix.architecture }})
    runs-on: ubuntu-latest

    permissions:
      packages: read

    container:
      image: ghcr.io/charlesnicholson/docker-image:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    strategy:
      matrix:
        architecture: [32, 64]
        compiler:
          - { name: "clang", env: "CC=clang CXX=clang++" }
          - { name: "gcc", env: "CC=gcc CXX=g++" }

    steps:
      - uses: actions/checkout@v3
      - name: Build
        run: ${{ matrix.compiler.env }} COBS_LINUXARCH=${{ matrix.architecture }} make -j

  macos:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3
      - name: Build
        run: make -j

  win:
    runs-on: windows-latest

    strategy:
      matrix:
        architecture: [32, 64]

    steps:
      - uses: actions/checkout@v3
      - name: Build
        shell: cmd
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars${{ matrix.architecture }}.bat"
          call make-win.bat

  all-checks-pass:
    needs: [sanitizers, linux, macos, win, arm-cm4]
    runs-on: ubuntu-latest
    steps:
    - run: echo Done

